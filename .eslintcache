[{"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\index.tsx":"1","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\App.js":"2","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\serviceWorker.js":"3","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\redux-store.tsx":"4","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\ProfileContainer.tsx":"5","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Navbar\\Navbar.tsx":"6","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Header\\HeaderContainer.tsx":"7","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Login\\Login.tsx":"8","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Users\\UsersContainer.tsx":"9","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Dialogs\\DialogsContainer.tsx":"10","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\profile-reducer.tsx":"11","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\dialogs-reducer.tsx":"12","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\sideBar-reducer.tsx":"13","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\users-reducer.tsx":"14","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\auth-reducer.tsx":"15","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Common\\Preloader\\Preloader.js":"16","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\Profile.tsx":"17","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Header\\Header.tsx":"18","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Users\\Users.tsx":"19","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Dialogs\\Dialogs.tsx":"20","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\hoc\\withAuthRedirect.tsx":"21","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\api\\api.ts":"22","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx":"23","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\ProfileInfo\\ProfileInfo.tsx":"24","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Dialogs\\DialogsItem\\DialogsItem.tsx":"25","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\ProfileInfo\\ProfileStatus.tsx":"26","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx":"27","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx":"28"},{"size":520,"mtime":1605279687000,"results":"29","hashOfConfig":"30"},{"size":994,"mtime":1607015658321,"results":"31","hashOfConfig":"30"},{"size":5086,"mtime":1605279687000,"results":"32","hashOfConfig":"30"},{"size":629,"mtime":1606999854954,"results":"33","hashOfConfig":"30"},{"size":1035,"mtime":1607966585800,"results":"34","hashOfConfig":"30"},{"size":922,"mtime":1605279687000,"results":"35","hashOfConfig":"30"},{"size":1157,"mtime":1607013882387,"results":"36","hashOfConfig":"30"},{"size":114,"mtime":1607015658314,"results":"37","hashOfConfig":"30"},{"size":2566,"mtime":1608024266420,"results":"38","hashOfConfig":"30"},{"size":712,"mtime":1607880035689,"results":"39","hashOfConfig":"30"},{"size":2396,"mtime":1608023993077,"results":"40","hashOfConfig":"30"},{"size":1477,"mtime":1607013588069,"results":"41","hashOfConfig":"30"},{"size":221,"mtime":1605279687000,"results":"42","hashOfConfig":"30"},{"size":4274,"mtime":1607012902545,"results":"43","hashOfConfig":"30"},{"size":1138,"mtime":1607014051421,"results":"44","hashOfConfig":"30"},{"size":188,"mtime":1605799139654,"results":"45","hashOfConfig":"30"},{"size":396,"mtime":1607962163510,"results":"46","hashOfConfig":"30"},{"size":491,"mtime":1606411781537,"results":"47","hashOfConfig":"30"},{"size":2625,"mtime":1607004998762,"results":"48","hashOfConfig":"30"},{"size":1788,"mtime":1607016576363,"results":"49","hashOfConfig":"30"},{"size":645,"mtime":1607877135797,"results":"50","hashOfConfig":"30"},{"size":1169,"mtime":1607964140909,"results":"51","hashOfConfig":"30"},{"size":1211,"mtime":1605279687000,"results":"52","hashOfConfig":"30"},{"size":698,"mtime":1607965555748,"results":"53","hashOfConfig":"30"},{"size":428,"mtime":1605279687000,"results":"54","hashOfConfig":"30"},{"size":1128,"mtime":1607965425263,"results":"55","hashOfConfig":"30"},{"size":954,"mtime":1605279687000,"results":"56","hashOfConfig":"30"},{"size":469,"mtime":1605279687000,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"hnxzdo",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"60"},"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\index.tsx",[],["126","127"],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\App.js",[],["128","129"],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\serviceWorker.js",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\redux-store.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\ProfileContainer.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Navbar\\Navbar.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Header\\HeaderContainer.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Login\\Login.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Users\\UsersContainer.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Dialogs\\DialogsContainer.tsx",["130"],"import React from \"react\";\nimport {addMessageActionCreator, updateNewMessageTextActionCreator} from \"../Redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\n\nlet mapStateToProps=(state: any)=>{\n    return {\n    dialogsPage: state.dialogsPage,\n       }\n}\n\n\nlet mapDispatchToProps=(dispatch:any)=>{\n    return {\n        onMessageChange: (text:any)=>{dispatch(updateNewMessageTextActionCreator(text))},\n        addMessage: ()=>{ dispatch(addMessageActionCreator())}\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect)\n(Dialogs)\n;","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\profile-reducer.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\dialogs-reducer.tsx",["131"],"import {DialogsPageType} from \"./dialogs-reducer.test\";\nimport {usersAPI} from \"../api/api\";\n\nconst ADD_MESSAGE = \"ADD-MESSAGE\";\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\n\n\nlet initialState: DialogsPageType = {\n    dialogs: [\n        {id: 1, name: \"Andrei\"},\n        {id: 2, name: \"Bob\"},\n        {id: 3, name: \"Ceva\"},\n        {id: 4, name: \"Dima\"},\n        {id: 5, name: \"Eva\"},\n        {id: 6, name: \"Fedor\"}\n    ],\n    messages: [\n        {id: 1, message: \"Hi, how are u\"},\n        {id: 2, message: \"Fine \"},\n        {id: 3, message: \"Cooolllll\"},\n    ],\n    newMessageText: 'Hi, friends!'\n}\n\nexport const dialogsReducer = (state = initialState, action: any) => {\n    switch (action.type) {\n        case  UPDATE_NEW_MESSAGE_TEXT: {\n            let stateCopy = {...state};\n            stateCopy.newMessageText = action.newText;\n            return stateCopy;\n        }\n        case  ADD_MESSAGE: {\n            let newMessage = {\n                id: 4, message: state.newMessageText\n            };\n            let stateCopy = {...state};\n            stateCopy.messages = [...state.messages]\n            stateCopy.messages.push(newMessage);\n            stateCopy.newMessageText = '';\n            return stateCopy;\n        }\n\n        default:\n            return state;\n    }\n\n}\nexport const addMessageActionCreator = () => ({type: ADD_MESSAGE})\nexport const updateNewMessageTextActionCreator = (text: string) => ({type: UPDATE_NEW_MESSAGE_TEXT, newText: text})\n","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\sideBar-reducer.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\users-reducer.tsx",["132","133"],"import React from \"react\";\nimport {usersAPI} from \"../api/api\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS = \"SET_TOTAL_USERS\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\n\nexport type photosType = {\n    small: string | null\n    large: string | null\n}\n\nexport type userType = {\n    id: number\n    name: string\n    status: string\n    photos: photosType\n}\n\nconst initialState = {\n    users: [] as Array<userType>,\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n}\ntype initialState = typeof initialState;\nexport const usersReducer = (state = initialState, action: any): initialState => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userID) {\n                        return {...u, followed: true}\n                    }\n                    return u;\n                })\n            }\n\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userID) {\n                        return {...u, followed: false}\n                    }\n                    return u;\n                })\n            }\n        case SET_USERS: {\n            return {\n                ...state,\n                users: [...action.users]\n            }\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n\n        }\n        case SET_TOTAL_USERS : {\n            return {...state, totalUsersCount: action.totalUsersCount}\n\n        }\n\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n\n            return {\n                ...state,\n                // @ts-ignore\n                followingInProgress: action.isFetching ?\n                    [...state.followingInProgress, action.userID]\n                    : state.followingInProgress.filter(id => id !== action.userID)\n            }\n        }\n        default:\n            return state;\n    }\n\n}\n\nexport const followSuccess = (userID: number) => ({type: FOLLOW, userID})\nexport const unfollowSuccess = (userID: number) => ({type: UNFOLLOW, userID})\nexport const setUsers = (users: string) => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setTotalUsersCount = (totalUsersCount: number) => ({type: SET_TOTAL_USERS, totalUsersCount})\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching})\nexport const toggleIsFollowingProgress = (isFetching: boolean, userID: number) =>\n    ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userID})\n\nexport const getUsers = (currentPage: number, pageSize: number)=> {\n   return (dispatch: any) => {\n    dispatch(toggleIsFetching(true))\n\n    usersAPI.getUsers(currentPage, pageSize).then(\n        (data: { items: string; totalCount: number; }) => {\n            dispatch(toggleIsFetching(false));\n            dispatch(setUsers(data.items));\n            dispatch(setTotalUsersCount(data.totalCount));\n        })\n}\n};\n\nexport const follow = (userID: number)=> {\n    return (dispatch: any) => {\n        dispatch(toggleIsFollowingProgress(true, userID));\n\n        usersAPI.follow(userID).then((response: { data: { resultCode: number; }; }) => {\n            if (response.data.resultCode === 0) {\n                dispatch(followSuccess(userID))\n            }\n           dispatch(toggleIsFollowingProgress(false, userID));\n        });\n    }\n};\n\nexport const unfollow = (userID: number)=> {\n    return (dispatch: any) => {\n        dispatch(toggleIsFollowingProgress(true, userID));\n\n        usersAPI.unfollow(userID).then((response: { data: { resultCode: number; }; }) => {\n            if (response.data.resultCode === 0) {\n                dispatch(unfollowSuccess(userID))\n            }\n            dispatch(toggleIsFollowingProgress(false, userID));\n        });\n    }\n};\n","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\auth-reducer.tsx",["134"],"import {usersAPI} from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nexport type authType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n    isAuth: boolean\r\n}\r\n\r\nconst initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\ntype initialState = typeof initialState;\r\nexport const authReducer = (state = initialState, action: any): initialState => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const setUserData = (id: number, email: string, login: string) => ({\r\n    type: SET_USER_DATA,\r\n    data: {id, email, login}\r\n})\r\n\r\n\r\nexport const getAuthUserData = () => {\r\n    return (dispatch: any) => {\r\n        usersAPI.getAuth().then((response: any) => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data;\r\n                dispatch(setUserData(id, email, login));\r\n            }\r\n            })\r\n    }\r\n};\r\n","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Common\\Preloader\\Preloader.js",["135"],"import React from \"react\";\r\nimport preloader from '../../Images/preloader.gif'\r\n\r\nexport const Preloader =()=> {\r\n    return (\r\n   <div>\r\n       <img src={preloader}/>\r\n   </div>\r\n    )\r\n}","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\Profile.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Header\\Header.tsx",["136"],"\nimport React from \"react\";\nimport classes from './Header.module.css';\nimport {NavLink} from 'react-router-dom';\n\nconst Header =(props: any) =>{\n    return(\n        <header className={classes.header}>\n        <img src='https://i.pinimg.com/originals/9c/6b/2b/9c6b2b7f6bdfca569fcad7993c9c60b6.png'/>\n        <div className={classes.loginBlock}>\n            {props.isAuth ?  props.login : <NavLink to ={'/Login'}>Login</NavLink>}\n        </div>\n            </header>)\n}\n\nexport default Header;","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Users\\Users.tsx",["137"],"import styles from \"./users.module.css\";\r\nimport React from \"react\";\r\nimport UserPhoto from '../Images/user.png';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Users = (props: any) => {\r\n\r\n    let pagesCount: number = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => {\r\n                    // @ts-ignore\r\n                    return <span className={props.currentPage === p && styles.selectedPage}\r\n                                 onClick={(e) => {\r\n                                     props.onPageChanged(p)\r\n                                 }}>{p}</span>\r\n                })}\r\n\r\n            </div>\r\n            {\r\n                props.users.map((u: {\r\n                    status: string,\r\n                    location: { city: string, country: string },\r\n                    name: string,\r\n                    id: number,\r\n                    photos: { small: string | undefined, large: string | undefined }\r\n                    followed: boolean\r\n                }) => <div key={u.id}>\r\n                <span>\r\n                 \r\n                    <NavLink to={'/Profile' + u.id}>\r\n                    <div>\r\n                        <img src={u.photos.small != null ? u.photos.small : UserPhoto} className={styles.userPhoto}/>\r\n                    </div>\r\n                        </NavLink>\r\n                    <div>\r\n                        {u.followed ?\r\n                            <button disabled={props.followingInProgress.some((id: number) => id === u.id)}\r\n                                    onClick={() => {\r\n                                        props.unfollow(u.id);\r\n                                    }}>Unfollow</button> :\r\n\r\n                            <button disabled={props.followingInProgress.some((id: number) => id === u.id)}\r\n                                    onClick={() => {\r\n                                        props.follow(u.id);\r\n                                    }}>Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n                    <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{'u.location.city'}</div>\r\n                        <div>{'u.location.country'}</div>\r\n                    </span>\r\n                </span>\r\n                </div>)\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Dialogs\\Dialogs.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\hoc\\withAuthRedirect.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\api\\api.ts",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx",["138"],"import React from \"react\";\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../Redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n// const MyPostsContainer = (props: any) => {\n// let state = props.store.getState();\n//\n//     let addPost = () => {\n//         props.store.dispatch(addPostActionCreator());\n//     }\n//\n//     let onPostChange = (text: any) => {\n//         let action = updateNewPostTextActionCreator(text);\n//         props.store.dispatch(action);\n//     }\n\n//     return (<MyPosts\n//         updateNewPostText={onPostChange}\n//         addPost={addPost}\n//         posts={state.profilePage.posts}\n//         newPostText={state.profilePage.newPostText}/>)\n// }\n\nlet mapStateToProps =(state: any)=>{\n    return {\n        posts:state.profilePage.posts,\n        newPostText:state.profilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps =(dispatch:any)=>{\n    return {\n        updateNewPostText: (text:any)=> {dispatch(updateNewPostTextActionCreator(text))},\n        addPost:()=> {dispatch(addPostActionCreator())}\n    }\n}\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\ProfileInfo\\ProfileInfo.tsx",["139"],"import React from \"react\";\nimport classes from './ProfileInfo.module.css';\nimport {Preloader} from \"../../../Common/Preloader/Preloader\";\nimport {ProfileStatus} from \"./ProfileStatus\";\n\n\nconst ProfileInfo = (props:any) => {\n    if(!props.profile) {\n        return <Preloader/>\n    }\n    return (\n        <div className={classes.content}>\n            {/*<img src='https://picwalls.ru/img/gallery/22/thumbs/thumb_l_9666pw.jpg'/>*/}\n            <div className={classes.descriptionBlock}>\n                <img src={props.profile.photos.large} />\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus} />\n            </div>\n\n        </div>)\n}\n\nexport default ProfileInfo;","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Dialogs\\DialogsItem\\DialogsItem.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\ProfileInfo\\ProfileStatus.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx",["140"],"import React from \"react\";\nimport classes from './Post.module.css';\n\ntype messageProps = {\n    message: string\n    likesCount: number\n}\nconst Post = (props: messageProps) => {\n    return (\n        <div className={classes.item}>\n            <img src='https://xakep.ru/wp-content/uploads/2013/12/085647.jpg'/>\n            {props.message}\n            <div>\n                <span>Like {props.likesCount}</span>\n            </div>\n        </div>\n\n    )\n}\nexport default Post",{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":1,"column":8,"nodeType":"147","messageId":"148","endLine":1,"endColumn":13},{"ruleId":"145","severity":1,"message":"149","line":2,"column":9,"nodeType":"147","messageId":"148","endLine":2,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":1,"column":8,"nodeType":"147","messageId":"148","endLine":1,"endColumn":13},{"ruleId":"150","severity":1,"message":"151","line":32,"column":6,"nodeType":"147","messageId":"152","endLine":32,"endColumn":18},{"ruleId":"150","severity":1,"message":"151","line":18,"column":6,"nodeType":"147","messageId":"152","endLine":18,"endColumn":18},{"ruleId":"153","severity":1,"message":"154","line":7,"column":8,"nodeType":"155","endLine":7,"endColumn":30},{"ruleId":"153","severity":1,"message":"154","line":9,"column":9,"nodeType":"155","endLine":9,"endColumn":98},{"ruleId":"153","severity":1,"message":"154","line":41,"column":25,"nodeType":"155","endLine":41,"endColumn":118},{"ruleId":"145","severity":1,"message":"146","line":1,"column":8,"nodeType":"147","messageId":"148","endLine":1,"endColumn":13},{"ruleId":"153","severity":1,"message":"154","line":15,"column":17,"nodeType":"155","endLine":15,"endColumn":57},{"ruleId":"153","severity":1,"message":"154","line":11,"column":13,"nodeType":"155","endLine":11,"endColumn":80},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'usersAPI' is defined but never used.","@typescript-eslint/no-redeclare","'initialState' is already defined.","redeclared","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]