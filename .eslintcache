[{"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\index.tsx":"1","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\App.js":"2","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\serviceWorker.js":"3","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\redux-store.tsx":"4","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\ProfileContainer.tsx":"5","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Navbar\\Navbar.tsx":"6","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Header\\HeaderContainer.tsx":"7","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Login\\Login.tsx":"8","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Users\\UsersContainer.tsx":"9","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Dialogs\\DialogsContainer.tsx":"10","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\profile-reducer.tsx":"11","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\dialogs-reducer.tsx":"12","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\sideBar-reducer.tsx":"13","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\users-reducer.tsx":"14","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\auth-reducer.tsx":"15","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Common\\Preloader\\Preloader.js":"16","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\Profile.tsx":"17","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Header\\Header.tsx":"18","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Users\\Users.tsx":"19","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Dialogs\\Dialogs.tsx":"20","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\hoc\\withAuthRedirect.tsx":"21","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\api\\api.ts":"22","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx":"23","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\ProfileInfo\\ProfileInfo.tsx":"24","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Dialogs\\DialogsItem\\DialogsItem.tsx":"25","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\ProfileInfo\\ProfileStatus.tsx":"26","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx":"27","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx":"28","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Utils\\Validators\\validators.tsx":"29","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Common\\FormsControls\\FormsControls.tsx":"30","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\app-reducer.tsx":"31","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\users-selectors.tsx":"32","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\ProfileInfo\\ProfileStatusWithHooks.tsx":"33"},{"size":520,"mtime":1605279687000,"results":"34","hashOfConfig":"35"},{"size":1644,"mtime":1609149652102,"results":"36","hashOfConfig":"35"},{"size":5086,"mtime":1605279687000,"results":"37","hashOfConfig":"35"},{"size":770,"mtime":1609149354788,"results":"38","hashOfConfig":"35"},{"size":1221,"mtime":1609150226477,"results":"39","hashOfConfig":"35"},{"size":922,"mtime":1605279687000,"results":"40","hashOfConfig":"35"},{"size":1053,"mtime":1609147399277,"results":"41","hashOfConfig":"35"},{"size":2081,"mtime":1608397807624,"results":"42","hashOfConfig":"35"},{"size":2924,"mtime":1609242080552,"results":"43","hashOfConfig":"35"},{"size":627,"mtime":1608313606495,"results":"44","hashOfConfig":"35"},{"size":2066,"mtime":1608315433787,"results":"45","hashOfConfig":"35"},{"size":954,"mtime":1608313581721,"results":"46","hashOfConfig":"35"},{"size":221,"mtime":1605279687000,"results":"47","hashOfConfig":"35"},{"size":4298,"mtime":1609165701285,"results":"48","hashOfConfig":"35"},{"size":2002,"mtime":1608398177180,"results":"49","hashOfConfig":"35"},{"size":188,"mtime":1605799139654,"results":"50","hashOfConfig":"35"},{"size":396,"mtime":1607962163510,"results":"51","hashOfConfig":"35"},{"size":569,"mtime":1608388070100,"results":"52","hashOfConfig":"35"},{"size":2625,"mtime":1607004998762,"results":"53","hashOfConfig":"35"},{"size":2192,"mtime":1608371405512,"results":"54","hashOfConfig":"35"},{"size":645,"mtime":1607877135797,"results":"55","hashOfConfig":"35"},{"size":1418,"mtime":1608382830859,"results":"56","hashOfConfig":"35"},{"size":575,"mtime":1608315451214,"results":"57","hashOfConfig":"35"},{"size":725,"mtime":1609922591736,"results":"58","hashOfConfig":"35"},{"size":428,"mtime":1605279687000,"results":"59","hashOfConfig":"35"},{"size":1430,"mtime":1608313998994,"results":"60","hashOfConfig":"35"},{"size":1486,"mtime":1608368208554,"results":"61","hashOfConfig":"35"},{"size":469,"mtime":1605279687000,"results":"62","hashOfConfig":"35"},{"size":319,"mtime":1608371504975,"results":"63","hashOfConfig":"35"},{"size":817,"mtime":1608397458703,"results":"64","hashOfConfig":"35"},{"size":853,"mtime":1609149158830,"results":"65","hashOfConfig":"35"},{"size":661,"mtime":1609242080567,"results":"66","hashOfConfig":"35"},{"size":1022,"mtime":1609924256222,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1s4o247",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"73"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"145","usedDeprecatedRules":"70"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"70"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\index.tsx",[],["151","152"],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\App.js",[],["153","154"],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\serviceWorker.js",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\redux-store.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\ProfileContainer.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Navbar\\Navbar.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Header\\HeaderContainer.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Login\\Login.tsx",["155"],"import React from \"react\";\r\nimport  {Field, reduxForm, InjectedFormProps} from \"redux-form\";\r\nimport {Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../Utils/Validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginTC} from \"../Redux/auth-reducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport style from './../Common/FormsControls/FormsControls.module.css'\r\nimport {Simulate} from \"react-dom/test-utils\";\r\n\r\n type FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\n const LoginForm:React.FC<InjectedFormProps<FormDataType>> =(props)=> {\r\n\r\n     return <div>\r\n              <form onSubmit={props.handleSubmit}>\r\n\r\n            <div>\r\n                <Field  placeholder={'Email'} name={'email'}\r\n                        component={Input} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field  placeholder={'Password'} name={'password'} type={'password'}\r\n                        component={Input} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n\r\n                <Field type={\"checkbox\"}  name={'rememberMe'}\r\n                       component={Input}/> remember me\r\n            </div>\r\n                  {  props.error && <div className={style.formCommonError}>\r\n                      {props.error}\r\n                  </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm);\r\n\r\nconst Login=(props: any)=> {\r\n     const onSubmit=(formData: FormDataType)=> {\r\n        // @ts-ignore\r\n         props.loginTC(formData.email, formData.password, formData.rememberMe)};\r\n        if(props.isAuth) {\r\n            return <Redirect to={'/profile'}/>\r\n        }\r\n    return <div>\r\n        <h1>Login</h1>\r\n       <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps =(state: any)=>( {\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect (mapStateToProps, {loginTC }) (Login);","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Users\\UsersContainer.tsx",["156"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {follow, getUsers, setCurrentPage, toggleIsFollowingProgress, unfollow, userType} from \"../Redux/users-reducer\";\nimport {Users} from \"./Users\";\nimport {Preloader} from \"../Common/Preloader/Preloader\";\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport { compose } from 'redux';\nimport {\n    getCurrentPage, getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount,\n    getUsersSelector, getUsersSuper\n} from \"../Redux/users-selectors\";\n\n\nexport type PropsType = {\n    currentPage: number\n    totalUsersCount: number\n    pageSize: number\n    isFetching: boolean\n\n    users: Array<userType>\n\n    setUsers: (users: string) => void\n    setCurrentPage: (currentPage: number) => void\n    setTotalUsersCount: (TotalUsersCount: number) => void\n    toggleIsFetching: (isFetching: boolean) => void\n    followingInProgress: (isFetching: boolean) => void\n    onPageChanged: (pageNumber: number) => void\n    follow: (userID: number) => void\n    unfollow: (userID: number) => void\n\n\n}\n\nclass UsersContainer extends React.Component<PropsType> {\n\n    componentDidMount() {\n        // @ts-ignore\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\n\n    }\n\n    onPageChanged = (pageNumber: number) => {\n        // @ts-ignore\n        this.props.getUsers(pageNumber, this.props.pageSize);\n    }\n\n    render() {\n\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users\n                totalUsersCount={this.props.totalUsersCount}\n                onPageChanged={this.onPageChanged}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                follow={this.props.follow}\n                unfollow={this.props.unfollow}\n                users={this.props.users}\n                            followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\n\n// const mapStateToProps = (state: any) => {\n//     return {\n//         users: state.usersPage.users,\n//         pageSize: state.usersPage.pageSize,\n//         totalUsersCount: state.usersPage.totalUsersCount,\n//         currentPage: state.usersPage.currentPage,\n//         isFetching: state.usersPage.isFetching,\n//         followingInProgress: state.usersPage.followingInProgress\n//     }\n// }\n\nconst mapStateToProps = (state: any) => {\n\n    return {\n\n        users: getUsersSuper(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\nexport default compose (\n\n    connect(mapStateToProps, {\n        follow,\n        unfollow,\n        setCurrentPage,\n        toggleIsFollowingProgress,\n        getUsers\n    }),\nwithAuthRedirect\n)(UsersContainer)\n","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Dialogs\\DialogsContainer.tsx",["157"],"import React from \"react\";\nimport {addMessageActionCreator} from \"../Redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\n\nlet mapStateToProps=(state: any)=>{\n    return {\n    dialogsPage: state.dialogsPage,\n       }\n}\n\n\nlet mapDispatchToProps=(dispatch:any)=>{\n    return {\n            addMessage: (newMessageBody: string)=>{ dispatch(addMessageActionCreator(newMessageBody))}\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect)\n(Dialogs)\n;","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\profile-reducer.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\dialogs-reducer.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\sideBar-reducer.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\users-reducer.tsx",["158","159"],"import React from \"react\";\nimport {usersAPI} from \"../api/api\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS = \"SET_TOTAL_USERS\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\n\nexport type photosType = {\n    small: string | null\n    large: string | null\n}\n\nexport type userType = {\n    id: number\n    name: string\n    status: string\n    photos: photosType\n}\n\nconst initialState = {\n    users: [] as Array<userType>,\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n}\ntype initialState = typeof initialState;\nexport const usersReducer = (state = initialState, action: any): initialState => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userID) {\n                        return {...u, followed: true}\n                    }\n                    return u;\n                })\n            }\n\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userID) {\n                        return {...u, followed: false}\n                    }\n                    return u;\n                })\n            }\n        case SET_USERS: {\n            return {\n                ...state,\n                users: [...action.users]\n            }\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n\n        }\n        case SET_TOTAL_USERS : {\n            return {...state, totalUsersCount: action.totalUsersCount}\n\n        }\n\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n\n            return {\n                ...state,\n                // @ts-ignore\n                followingInProgress: action.isFetching ?\n                    [...state.followingInProgress, action.userID]\n                    : state.followingInProgress.filter(id => id !== action.userID)\n            }\n        }\n        default:\n            return state;\n    }\n\n}\n\nexport const followSuccess = (userID: number) => ({type: FOLLOW, userID})\nexport const unfollowSuccess = (userID: number) => ({type: UNFOLLOW, userID})\nexport const setUsers = (users: string) => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setTotalUsersCount = (totalUsersCount: number) => ({type: SET_TOTAL_USERS, totalUsersCount})\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching})\nexport const toggleIsFollowingProgress = (isFetching: boolean, userID: number) =>\n    ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userID})\n\nexport const getUsers = (page: number, pageSize: number)=> {\n   return (dispatch: any) => {\n    dispatch(toggleIsFetching(true));\n       dispatch(setCurrentPage(page))\n    usersAPI.getUsers(page, pageSize).then(\n        (data: { items: string; totalCount: number; }) => {\n            dispatch(toggleIsFetching(false));\n            dispatch(setUsers(data.items));\n            dispatch(setTotalUsersCount(data.totalCount));\n        })\n}\n};\n\nexport const follow = (userID: number)=> {\n    return (dispatch: any) => {\n        dispatch(toggleIsFollowingProgress(true, userID));\n\n        usersAPI.follow(userID).then((response: { data: { resultCode: number; }; }) => {\n            if (response.data.resultCode === 0) {\n                dispatch(followSuccess(userID))\n            }\n           dispatch(toggleIsFollowingProgress(false, userID));\n        });\n    }\n};\n\nexport const unfollow = (userID: number)=> {\n    return (dispatch: any) => {\n        dispatch(toggleIsFollowingProgress(true, userID));\n\n        usersAPI.unfollow(userID).then((response: { data: { resultCode: number; }; }) => {\n            if (response.data.resultCode === 0) {\n                dispatch(unfollowSuccess(userID))\n            }\n            dispatch(toggleIsFollowingProgress(false, userID));\n        });\n    }\n};\n","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\auth-reducer.tsx",["160"],"import {authAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nexport type authType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n    isAuth: boolean\r\n}\r\n\r\nconst initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\ntype initialState = typeof initialState;\r\nexport const authReducer = (state = initialState, action: any): initialState => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const setUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n    type: SET_USER_DATA,\r\n    data: {id, email, login, isAuth}\r\n})\r\n\r\n\r\nexport const getAuthUserData = () => {\r\n    return (dispatch: any) => {\r\n        usersAPI.getAuth().then((response: any) => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data;\r\n                dispatch(setUserData(id, email, login, true));\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean) => {\r\n    return (dispatch: any) => {\r\n        authAPI.login(email, password, rememberMe).then((response: any) => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n                dispatch(stopSubmit(\"login\", {_error: message}))\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nexport const logoutTC = () => {\r\n    return (dispatch: any) => {\r\n        authAPI.logout().then((response: any) => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setUserData(null, null, null, false));\r\n            }\r\n        })\r\n    }\r\n};","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Common\\Preloader\\Preloader.js",["161"],"import React from \"react\";\r\nimport preloader from '../../Images/preloader.gif'\r\n\r\nexport const Preloader =()=> {\r\n    return (\r\n   <div>\r\n       <img src={preloader}/>\r\n   </div>\r\n    )\r\n}","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\Profile.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Header\\Header.tsx",["162"],"\nimport React from \"react\";\nimport classes from './Header.module.css';\nimport {NavLink} from 'react-router-dom';\n\nconst Header =(props: any) =>{\n    return(\n        <header className={classes.header}>\n        <img src='https://i.pinimg.com/originals/9c/6b/2b/9c6b2b7f6bdfca569fcad7993c9c60b6.png'/>\n        <div className={classes.loginBlock}>\n            {props.isAuth ?   <div>{props.login} - <button onClick={props.logoutTC}>Log out</button></div>:\n                <NavLink to ={'/Login'}>Login</NavLink>}\n        </div>\n\n        </header>)\n}\n\nexport default Header;","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Users\\Users.tsx",["163"],"import styles from \"./users.module.css\";\r\nimport React from \"react\";\r\nimport UserPhoto from '../Images/user.png';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Users = (props: any) => {\r\n\r\n    let pagesCount: number = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => {\r\n                    // @ts-ignore\r\n                    return <span className={props.currentPage === p && styles.selectedPage}\r\n                                 onClick={(e) => {\r\n                                     props.onPageChanged(p)\r\n                                 }}>{p}</span>\r\n                })}\r\n\r\n            </div>\r\n            {\r\n                props.users.map((u: {\r\n                    status: string,\r\n                    location: { city: string, country: string },\r\n                    name: string,\r\n                    id: number,\r\n                    photos: { small: string | undefined, large: string | undefined }\r\n                    followed: boolean\r\n                }) => <div key={u.id}>\r\n                <span>\r\n                 \r\n                    <NavLink to={'/Profile' + u.id}>\r\n                    <div>\r\n                        <img src={u.photos.small != null ? u.photos.small : UserPhoto} className={styles.userPhoto}/>\r\n                    </div>\r\n                        </NavLink>\r\n                    <div>\r\n                        {u.followed ?\r\n                            <button disabled={props.followingInProgress.some((id: number) => id === u.id)}\r\n                                    onClick={() => {\r\n                                        props.unfollow(u.id);\r\n                                    }}>Unfollow</button> :\r\n\r\n                            <button disabled={props.followingInProgress.some((id: number) => id === u.id)}\r\n                                    onClick={() => {\r\n                                        props.follow(u.id);\r\n                                    }}>Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n                    <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{'u.location.city'}</div>\r\n                        <div>{'u.location.country'}</div>\r\n                    </span>\r\n                </span>\r\n                </div>)\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Dialogs\\Dialogs.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\hoc\\withAuthRedirect.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\api\\api.ts",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx",["164"],"import React from \"react\";\nimport {addPostActionCreator} from \"../../Redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToProps =(state: any)=>{\n    return {\n        posts:state.profilePage.posts,\n        newPostText:state.profilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps =(dispatch:any)=>{\n    return {\n         addPost:(newPostText: string)=> {dispatch(addPostActionCreator(newPostText))}\n    }\n}\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\ProfileInfo\\ProfileInfo.tsx",["165"],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Dialogs\\DialogsItem\\DialogsItem.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\ProfileInfo\\ProfileStatus.tsx",["166","167","168"],"import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\n\r\n\r\nexport class ProfileStatus extends React.Component<any, any> {\r\n\r\n    state= {\r\n        editMode: false,\r\n        status:this.props.status\r\n          };\r\n\r\n    activateEditMode =()=> {\r\n        this.setState( {\r\n            editMode: true,\r\n\r\n        })\r\n      };\r\n\r\n    deactivateEditMode =()=> {\r\n        this.setState( {\r\n            editMode: false\r\n        });\r\n             this.props.updateStatus(this.state.status);\r\n    };\r\n    onStatusChange=(e: { currentTarget: { value: any; }; })=> {\r\n        this.setState({status:  e.currentTarget.value})\r\n\r\n    };\r\n\r\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<any>, snapshot?: any): void {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({status: this.props.status})\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onClick={this.activateEditMode}>{this.props.status}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange}  autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n};\r\n",["169","170"],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx",["171"],"import React from \"react\";\nimport classes from './Post.module.css';\n\ntype messageProps = {\n    message: string\n    likesCount: number\n}\nconst Post = (props: messageProps) => {\n    return (\n        <div className={classes.item}>\n            <img src='https://xakep.ru/wp-content/uploads/2013/12/085647.jpg'/>\n            {props.message}\n            <div>\n                <span>Like {props.likesCount}</span>\n            </div>\n        </div>\n\n    )\n}\nexport default Post","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Utils\\Validators\\validators.tsx",["172"],"import React from \"react\";\r\n\r\nexport const required =(value: any)=>{\r\n  if(value) return undefined\r\n    else return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator= (maxLength: any)=>(value: any)=>{\r\n  if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n  else return undefined\r\n}","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Common\\FormsControls\\FormsControls.tsx",[],"C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\app-reducer.tsx",["173","174"],"import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nexport type appReducerType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState = {\r\n    initialized:false\r\n  }\r\n\r\ntype initialState = typeof initialState;\r\n\r\nexport const appReducer = (state = initialState, action: any): initialState => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const initializedSuccess= () => ({type: INITIALIZED_SUCCESS})\r\n\r\n\r\nexport const initializeApp = () =>(dispatch: any)=> {\r\n    const promise = dispatch(getAuthUserData())\r\n    Promise.all([promise]).\r\n        then(()=>{\r\n        dispatch(initializedSuccess())\r\n    })\r\n\r\n};\r\n","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Redux\\users-selectors.tsx",["175"],"import React from \"react\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector=(state: any)=> state.usersPage.users;\r\n\r\nexport const getUsersSuper = createSelector(getUsersSelector, (users)=> {\r\n        return users.filter((u: boolean)=>true);\r\n});\r\n\r\nexport const getPageSize=(state: any)=>state.usersPage.pageSize;\r\n\r\nexport const getTotalUsersCount=(state: any)=>state.usersPage.totalUsersCount;\r\n\r\nexport const getCurrentPage=(state: any)=>state.usersPage.currentPage;\r\n\r\nexport const getIsFetching=(state: any)=>state.usersPage.isFetching;\r\n\r\nexport const getFollowingInProgress=(state: any)=>state.usersPage.followingInProgress;\r\n\r\n","C:\\Users\\Zver\\Desktop\\SN\\Social-net-main\\social-net\\src\\Components\\Profile\\MyPosts\\ProfileInfo\\ProfileStatusWithHooks.tsx",["176","177","178"],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":9,"column":9,"nodeType":"185","messageId":"186","endLine":9,"endColumn":17},{"ruleId":"183","severity":1,"message":"187","line":13,"column":5,"nodeType":"185","messageId":"186","endLine":13,"endColumn":21},{"ruleId":"183","severity":1,"message":"188","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"183","severity":1,"message":"188","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"189","severity":1,"message":"190","line":32,"column":6,"nodeType":"185","messageId":"191","endLine":32,"endColumn":18},{"ruleId":"189","severity":1,"message":"190","line":19,"column":6,"nodeType":"185","messageId":"191","endLine":19,"endColumn":18},{"ruleId":"192","severity":1,"message":"193","line":7,"column":8,"nodeType":"194","endLine":7,"endColumn":30},{"ruleId":"192","severity":1,"message":"193","line":9,"column":9,"nodeType":"194","endLine":9,"endColumn":98},{"ruleId":"192","severity":1,"message":"193","line":41,"column":25,"nodeType":"194","endLine":41,"endColumn":118},{"ruleId":"183","severity":1,"message":"188","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"192","severity":1,"message":"193","line":15,"column":17,"nodeType":"194","endLine":15,"endColumn":57},{"ruleId":"183","severity":1,"message":"195","line":2,"column":9,"nodeType":"185","messageId":"186","endLine":2,"endColumn":14},{"ruleId":"183","severity":1,"message":"196","line":2,"column":16,"nodeType":"185","messageId":"186","endLine":2,"endColumn":33},{"ruleId":"183","severity":1,"message":"197","line":2,"column":35,"nodeType":"185","messageId":"186","endLine":2,"endColumn":44},{"ruleId":"179","replacedBy":"198"},{"ruleId":"181","replacedBy":"199"},{"ruleId":"192","severity":1,"message":"193","line":11,"column":13,"nodeType":"194","endLine":11,"endColumn":80},{"ruleId":"183","severity":1,"message":"188","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"189","severity":1,"message":"190","line":13,"column":6,"nodeType":"185","messageId":"191","endLine":13,"endColumn":18},{"ruleId":"200","severity":1,"message":"201","line":34,"column":27,"nodeType":"202","messageId":"203","endLine":34,"endColumn":28,"fix":"204"},{"ruleId":"183","severity":1,"message":"188","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"183","severity":1,"message":"195","line":2,"column":9,"nodeType":"185","messageId":"186","endLine":2,"endColumn":14},{"ruleId":"183","severity":1,"message":"196","line":2,"column":16,"nodeType":"185","messageId":"186","endLine":2,"endColumn":33},{"ruleId":"183","severity":1,"message":"197","line":2,"column":35,"nodeType":"185","messageId":"186","endLine":2,"endColumn":44},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"@typescript-eslint/no-unused-vars","'Simulate' is defined but never used.","Identifier","unusedVar","'getUsersSelector' is defined but never used.","'React' is defined but never used.","@typescript-eslint/no-redeclare","'initialState' is already defined.","redeclared","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Field' is defined but never used.","'InjectedFormProps' is defined but never used.","'reduxForm' is defined but never used.",["205"],["206"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"207","text":"208"},"no-global-assign","no-unsafe-negation",[776,787],"\r\n        ."]