{"version":3,"sources":["../node_modules/redux-form/es/Form.js","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.tsx","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.tsx","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/MyPosts/MyPostsContainer.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx"],"names":["Form","_Component","props","_this","call","this","_reduxForm","Error","_inheritsLoose","_proto","prototype","componentDidMount","registerInnerOnSubmit","onSubmit","componentDidUpdate","prevProps","render","_this$props","rest","_objectWithoutPropertiesLoose","React","createElement","Component","propTypes","PropTypes","func","isRequired","object","withReduxForm","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","classes","content","descriptionBlock","src","photos","large","Preloader","Post","item","message","likesCount","MyPosts","memo","postsElements","posts","map","p","id","AddNewPostFormRedux","values","addPost","newPostText","maxLength30","maxLengthCreator","reduxForm","form","handleSubmit","Field","placeholder","name","component","TextArea","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","stats","ProfileContainer","userId","match","params","authorizedUserId","getUsersProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.b2e6afd3.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withReduxForm } from './ReduxFormContext';\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    if (!props._reduxForm) {\n      throw new Error('Form must be inside a component decorated with reduxForm()');\n    }\n\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.onSubmit !== prevProps.onSubmit) {\n      this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _reduxForm = _this$props._reduxForm,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"_reduxForm\"]);\n\n    return /*#__PURE__*/React.createElement(\"form\", rest);\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  _reduxForm: PropTypes.object\n};\nexport default withReduxForm(Form);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__13RHl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__atx0M\"};","import React, {useEffect, useState} from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\n\r\n\r\nexport const ProfileStatusWithHooks =(props:any)=> {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(()=> {\r\n        status(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode =()=> {\r\n        setEditMode(true)\r\n    };\r\n\r\n    const deactivateEditMode =()=> {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    };\r\n\r\n    const onStatusChange =(e: { currentTarget: { value: any; }; })=> {\r\n        setStatus({status:  e.currentTarget.value})\r\n    };\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onClick={activateEditMode}>{props.status}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from './ProfileInfo.module.css';\r\nimport {Preloader} from \"../../../Common/Preloader/Preloader\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}:any) => {\r\n    if(!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={classes.content}>\r\n            {/*<img src='https://picwalls.ru/img/gallery/22/thumbs/thumb_l_9666pw.jpg'/>*/}\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n\r\n        </div>)\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport classes from './Post.module.css';\r\n\r\ntype messageProps = {\r\n    message: string\r\n    likesCount: number\r\n}\r\nconst Post = (props: messageProps) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src='https://xakep.ru/wp-content/uploads/2013/12/085647.jpg'/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Post","import React from \"react\";\r\nimport classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, Form, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../Utils/Validators/validators\";\r\nimport {TextArea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\ntype PostDataType = {\r\n    newPostText: string\r\n\r\n}\r\n\r\nconst MyPosts=React.memo((props: any)=> {\r\n\r\n    // @ts-ignore\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id}/>)\r\n\r\n\r\n    let onAddPost = (values: PostDataType) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n\r\n    return <div className={classes.posts}>\r\n        <div className={classes.item}>\r\n            <div>\r\n                MyPost\r\n            </div>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n})\r\n\r\nconst  maxLength30 = maxLengthCreator(30)\r\n\r\nconst AddNewPostForm:React.FC<InjectedFormProps<PostDataType>> =\r\n    (props)=> {\r\n        return(\r\n\r\n            <Form onSubmit={props.handleSubmit}>\r\n                <Field\r\n                    placeholder={'Send message'} name={'newPostText'} component={TextArea}\r\n                    validate={[required, maxLength30 ]}/>\r\n                <div>\r\n                    <button >Send message</button>\r\n                </div>\r\n            </Form>\r\n        )\r\n    }\r\nconst  AddNewPostFormRedux = reduxForm<PostDataType>({form: 'AddNewPostForm'})( AddNewPostForm);\r\n\r\nexport default MyPosts","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps =(state: any)=>{\r\n    return {\r\n        posts:state.profilePage.posts,\r\n        newPostText:state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps =(dispatch:any)=>{\r\n    return {\r\n         addPost:(newPostText: string)=> {dispatch(addPostActionCreator(newPostText))}\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer","import React from \"react\";\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props: any) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} stats={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUsersProfile, updateStatus} from \"../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component<any, any> {\r\n\r\n    componentDidMount(): void {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            // if(!userId) {\r\n            //     this.props.history.push('/login')\r\n            // }\r\n        }\r\n        this.props.getUsersProfile(userId);\r\n        this.props.getStatus(userId);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}\r\n                     status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUsersProfile, getStatus, updateStatus}),\r\n        withRouter,)\r\n    (ProfileContainer)\r\n"],"sourceRoot":""}