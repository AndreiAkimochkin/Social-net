{"version":3,"sources":["Components/hoc/withAuthRedirect.tsx","Components/Redux/dialogs-reducer.tsx","Components/Users/users.module.css","Components/api/api.ts","Components/Navbar/Navbar.module.css","Components/Navbar/Navbar.tsx","Components/Utils/object-helper.ts","Components/Redux/users-reducer.tsx","Components/Common/Paginator/Paginator.jsx","Components/Images/user.png","Components/Users/User.tsx","Components/Users/Users.tsx","Components/Redux/users-selectors.tsx","Components/Users/UsersContainer.tsx","Components/Header/Header.tsx","Components/Redux/auth-reducer.tsx","Components/Header/HeaderContainer.tsx","Components/Login/Login.tsx","Components/Redux/app-reducer.tsx","App.js","serviceWorker.js","Components/Redux/sideBar-reducer.tsx","Components/Redux/redux-store.tsx","index.tsx","Components/Images/preloader.gif","Components/Common/Preloader/Preloader.js","Components/Common/FormsControls/FormsControls.module.css","Components/Common/FormsControls/FormsControls.tsx","Components/Common/Paginator/Paginator.module.css","Components/Utils/Validators/validators.tsx","Components/Header/Header.module.css","Components/Redux/profile-reducer.tsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","ADD_MESSAGE","initialState","dialogs","id","name","messages","message","newMessageText","dialogsReducer","action","type","body","newMessageBody","addMessageActionCreator","module","exports","instanse","axios","withCredentials","headers","baseURL","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getAuth","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","login","email","password","rememberMe","logout","Navbar","className","classes","nav","item","href","updateObjectInArray","items","itemId","objectPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","userID","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","filter","p","cn","selectedPage","pageNumber","e","User","user","src","photos","small","UserPhoto","userPhoto","followed","disabled","some","Users","getUsersSuper","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","Preloader","compose","bind","page","totalCount","Header","header","loginBlock","logoutTC","SET_USER_DATA","setUserData","getAuthUserData","HeaderContainer","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","placeholder","component","Input","validate","required","style","formCommonError","loginTC","length","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","Suspense","fallback","withRouter","app","promise","Promise","all","Boolean","window","location","hostname","match","sideBar","reducers","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","preloader","FormControl","input","meta","touched","children","hasError","formControl","TextArea","RestProps","child","value","maxLengthCreator","maxLength","ADD_POST","SET_USERS_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profile","newPost","newPostText","postId","addPostActionCreator","setStatus","getUsersProfile","UserID"],"mappings":"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","file":"static/js/main.02574dc0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state: any) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect =(Component: Function)=> {\r\n    class RedirectComponent extends React.Component<any, any> {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/Login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n// @ts-ignore\r\n   let ConnectedAuthRedirectComponent=connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import {DialogsPageType} from \"./dialogs-reducer.test\";\r\n\r\nconst ADD_MESSAGE = \"ADD-MESSAGE\";\r\n\r\nlet initialState: DialogsPageType = {\r\n    dialogs: [\r\n        {id: 1, name: \"Andrei\"},\r\n        {id: 2, name: \"Bob\"},\r\n        {id: 3, name: \"Ceva\"},\r\n        {id: 4, name: \"Dima\"},\r\n        {id: 5, name: \"Eva\"},\r\n        {id: 6, name: \"Fedor\"}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hi, how are u\"},\r\n        {id: 2, message: \"Fine \"},\r\n        {id: 3, message: \"Cooolllll\"},\r\n    ],\r\n    newMessageText: ''\r\n}\r\n\r\nexport const dialogsReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n\r\n        case  ADD_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport const addMessageActionCreator = (newMessageBody: string) => ({type: ADD_MESSAGE, newMessageBody})\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3CC5d\",\"selectedPage\":\"users_selectedPage__10QSY\"};","import * as axios from \"axios\";\r\n\r\n// @ts-ignore\r\nconst instanse = axios.create({\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"fe58a20b-6990-4fee-a414-1ab0afb5a9c0\"},\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage= 1, pageSize=10) {\r\n\r\n        return instanse.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then((response: { data: any; }) => response.data)\r\n    },\r\n    follow(userId: number) {\r\n\r\n        return instanse.post(`follow/${userId}`, {},)\r\n    },\r\n    unfollow(userId: number) {\r\n\r\n        return instanse.delete(`follow/${userId}`, {})\r\n    },\r\n    getAuth() {\r\n        return instanse.get(`auth/me`)\r\n    },\r\n    getProfile( userId: number) {\r\n        return profileAPI.getProfile( userId)\r\n\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n\r\n    getProfile( userId: number) {\r\n        return instanse.get(`profile/` + userId)\r\n\r\n    },\r\n\r\n    getStatus( userId: number) {\r\n        return instanse.get(`profile/status/`  + userId)\r\n    },\r\n    updateStatus(status: string | number) {\r\n        return instanse.put(`profile/status/`, {status} )\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    login(email: string , password:string , rememberMe:boolean) {\r\n        return instanse.post(`/auth/login`, {email, password, rememberMe} )\r\n    },\r\n    logout() {\r\n        return instanse.delete(`/auth/login`)\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__FKrDV\",\"item\":\"Navbar_item__-F7EU\",\"active\":\"Navbar_active__2HU4s\"};","import React from \"react\";\r\nimport classes from \"./Navbar.module.css\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst Navbar = () => {\r\n    return <nav className={classes.nav}>\r\n        <div className={classes.item}>\r\n            <NavLink to='/Profile'>Profile</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to='/Dialogs'>Messages</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to='/Users'>Users</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <a href='/news'>News</a>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <a href='/music'>Music</a>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <a href='/settings'>Settings</a>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <a href='/friends'><h1>Friends</h1></a>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;\r\n","\r\nexport const updateObjectInArray=(items: any, itemId: any, objectPropName: string, newObjProps: any)=> {\r\n    return items.map((u: any) => {\r\n        if (u[objectPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n\r\n","import React from \"react\";\r\nimport {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../Utils/object-helper\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS = \"SET_TOTAL_USERS\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nexport type photosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\n\r\nexport type userType = {\r\n    id: number\r\n    name: string\r\n    status: string\r\n    photos: photosType\r\n}\r\n\r\nconst initialState = {\r\n    users: [] as Array<userType>,\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\ntype initialState = typeof initialState;\r\nexport const usersReducer = (state = initialState, action: any): initialState => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID, 'id', { followed: true} )\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userID) {\r\n                //         return {...u, followed: true}\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID, 'id', { followed: false} )\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userID) {\r\n                //         return {...u, followed: false}\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n\r\n        }\r\n        case SET_TOTAL_USERS : {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n\r\n            return {\r\n                ...state,\r\n                // @ts-ignore\r\n                followingInProgress: action.isFetching ?\r\n                    [...state.followingInProgress, action.userID]\r\n                    : state.followingInProgress.filter(id => id !== action.userID)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const followSuccess = (userID: number) => ({type: FOLLOW, userID})\r\nexport const unfollowSuccess = (userID: number) => ({type: UNFOLLOW, userID})\r\nexport const setUsers = (users: string) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({type: SET_TOTAL_USERS, totalUsersCount})\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleIsFollowingProgress = (isFetching: boolean, userID: number) =>\r\n    ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userID})\r\n\r\nexport const getUsers = (page: number, pageSize: number) => async (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page))\r\n    let data = await usersAPI.getUsers(page, pageSize)\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n};\r\n\r\nexport const followUnfollowFlow = async (dispatch: any, userID: number, apiMethod: any, actionCreator: any)=> {\r\n    dispatch(toggleIsFollowingProgress(true, userID));\r\n    let response = await apiMethod(userID)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userID))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userID));\r\n}\r\n\r\n\r\nexport const follow = (userID: number) => {\r\n    return async (dispatch: any) => {\r\n    followUnfollowFlow(dispatch, userID, usersAPI.follow.bind(usersAPI), followSuccess)\r\n}}\r\n\r\nexport const unfollow = (userID: number) =>  {\r\n    return async (dispatch: any) => {\r\n        followUnfollowFlow(dispatch, userID, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }}\r\n","import styles from \"./Paginator.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport cn from \"classnames\";\r\n\r\nexport const Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        {portionCount >portionNumber && <button\r\n            onClick={()=>{setPortionNumber(portionNumber+1)}}>NEXT</button>}\r\n    </div>\r\n}\r\n","export default __webpack_public_path__ + \"static/media/user.2c461c43.png\";","import styles from \"./users.module.css\";\r\nimport React from \"react\";\r\nimport UserPhoto from '../Images/user.png';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const User = ({user, followingInProgress, unfollow, follow}: any) => {\r\n      return (\r\n        <div>\r\n                <span>\r\n                 \r\n                    <NavLink to={'/Profile' + user.id}>\r\n                    <div>\r\n                        <img src={user.photos.small != null ? user.photos.small : UserPhoto} className={styles.userPhoto}/>\r\n                    </div>\r\n                        </NavLink>\r\n                    <div>\r\n                        {user.followed ?\r\n                            <button disabled={followingInProgress.some((id: number) => id === user.id)}\r\n                                    onClick={() => {unfollow(user.id);}}>Unfollow</button> :\r\n\r\n                            <button disabled={followingInProgress.some((id: number) => id === user.id)}\r\n                                    onClick={() => {follow(user.id);}}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{'user.location.city'}</div>\r\n                        <div>{'user.location.country'}</div>\r\n                    </span>\r\n                </span>\r\n        </div>\r\n)\r\n}","import React from \"react\";\r\nimport {Paginator} from \"../Common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\n\r\nexport const Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, ...props}: any) => {\r\n    return (\r\n        <div>\r\n\r\n            <Paginator currentPage={currentPage}\r\n                       onPageChanged={onPageChanged}\r\n                       totalUsersCount={totalUsersCount}\r\n                       pageSize={pageSize}\r\n            />\r\n\r\n            {props.users.map((u:any) => <User key={u.id}\r\n                                              user={u}\r\n                                              followingInProgress={props.followingInProgress}\r\n                                              unfollow={props.unfollow}\r\n                                              follow={props.follow}/>)}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector=(state: any)=> state.usersPage.users;\r\n\r\nexport const getUsersSuper = createSelector(getUsersSelector, (users)=> {\r\n        return users.filter((u: boolean)=>true);\r\n});\r\n\r\nexport const getPageSize=(state: any)=>state.usersPage.pageSize;\r\n\r\nexport const getTotalUsersCount=(state: any)=>state.usersPage.totalUsersCount;\r\n\r\nexport const getCurrentPage=(state: any)=>state.usersPage.currentPage;\r\n\r\nexport const getIsFetching=(state: any)=>state.usersPage.isFetching;\r\n\r\nexport const getFollowingInProgress=(state: any)=>state.usersPage.followingInProgress;\r\n\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {follow, getUsers, setCurrentPage, toggleIsFollowingProgress, unfollow, userType} from \"../Redux/users-reducer\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport { compose } from 'redux';\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersSelector, getUsersSuper\r\n} from \"../Redux/users-selectors\";\r\n\r\n\r\nexport type PropsType = {\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n\r\n    users: Array<userType>\r\n\r\n    setUsers: (users: string) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    setTotalUsersCount: (TotalUsersCount: number) => void\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    followingInProgress: (isFetching: boolean) => void\r\n    onPageChanged: (pageNumber: number) => void\r\n    follow: (userID: number) => void\r\n    unfollow: (userID: number) => void\r\n\r\n\r\n}\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} =this.props\r\n        // @ts-ignore\r\n        this.props.getUsers(currentPage, pageSize);\r\n\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize}= this.props\r\n        // @ts-ignore\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                onPageChanged={this.onPageChanged}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                users={this.props.users}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n// const mapStateToProps = (state: any) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\r\n    return {\r\n\r\n        users: getUsersSuper(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose (\r\n\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleIsFollowingProgress,\r\n        getUsers\r\n    }),\r\nwithAuthRedirect\r\n)(UsersContainer)\r\n","\r\nimport React from \"react\";\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header =(props: any) =>{\r\n    return(\r\n        <header className={classes.header}>\r\n        <img src='https://i.pinimg.com/originals/9c/6b/2b/9c6b2b7f6bdfca569fcad7993c9c60b6.png'/>\r\n        <div className={classes.loginBlock}>\r\n            {props.isAuth ?   <div>{props.login} - <button onClick={props.logoutTC}>Log out</button></div>:\r\n                <NavLink to ={'/Login'}>Login</NavLink>}\r\n        </div>\r\n\r\n        </header>)\r\n}\r\n\r\nexport default Header;","import {authAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nexport type authType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n    isAuth: boolean\r\n}\r\n\r\nconst initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\ntype initialState = typeof initialState;\r\nexport const authReducer = (state = initialState, action: any): initialState => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const setUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n    type: SET_USER_DATA,\r\n    data: {id, email, login, isAuth}\r\n})\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    let response = await usersAPI.getAuth()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\n\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean) =>\r\n    async (dispatch: any) => {\r\n        let response = await authAPI.login(email, password, rememberMe)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n            dispatch(stopSubmit(\"login\", {_error: message}))\r\n        }\r\n    };\r\n\r\nexport const logoutTC = () => async (dispatch: any) => {\r\n        let response = await authAPI.logout()\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setUserData(null, null, null, false));\r\n            }\r\n};","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {userType} from \"../Redux/users-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutTC} from \"../Redux/auth-reducer\";\r\n\r\n\r\nexport type PropsHeaderContainerType = {\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n\r\n    users: Array<userType>\r\n\r\n    setUsers: (users: string) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    setTotalUsersCount: (TotalUsersCount: number) => void\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    onPageChanged: (pageNumber: number) => void\r\n    follow: (userID: number) => void\r\n    unfollow: (userID: number) => void\r\n    withCredentials: boolean\r\n}\r\n\r\nclass HeaderContainer extends React.Component<PropsHeaderContainerType> {\r\n\r\n    render() {\r\n        // @ts-ignore\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {logoutTC})(HeaderContainer);","import React from \"react\";\r\nimport  {Field, reduxForm, InjectedFormProps} from \"redux-form\";\r\nimport {Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../Utils/Validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginTC} from \"../Redux/auth-reducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport style from './../Common/FormsControls/FormsControls.module.css'\r\n\r\n type FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\n const LoginForm:React.FC<InjectedFormProps<FormDataType>> =({handleSubmit, error})=> {\r\n\r\n     return <div>\r\n              <form onSubmit={handleSubmit}>\r\n\r\n            <div>\r\n                <Field  placeholder={'Email'} name={'email'}\r\n                        component={Input} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field  placeholder={'Password'} name={'password'} type={'password'}\r\n                        component={Input} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n\r\n                <Field type={\"checkbox\"}  name={'rememberMe'}\r\n                       component={Input}/> remember me\r\n            </div>\r\n                  {  error && <div className={style.formCommonError}>\r\n                      {error}\r\n                  </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm);\r\n\r\nconst Login=(props: any)=> {\r\n     const onSubmit=(formData: FormDataType)=> {\r\n        // @ts-ignore\r\n         props.loginTC(formData.email, formData.password, formData.rememberMe)};\r\n        if(props.isAuth) {\r\n            return <Redirect to={'/profile'}/>\r\n        }\r\n    return <div>\r\n        <h1>Login</h1>\r\n       <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps =(state: any)=>( {\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect (mapStateToProps, {loginTC }) (Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nexport type appReducerType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState = {\r\n    initialized:false\r\n  }\r\n\r\ntype initialState = typeof initialState;\r\n\r\nexport const appReducer = (state = initialState, action: any): initialState => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const initializedSuccess= () => ({type: INITIALIZED_SUCCESS})\r\n\r\n\r\nexport const initializeApp = () => async(dispatch: any)=> {\r\n    const promise = dispatch(getAuthUserData())\r\n    await Promise.all([promise])\r\n             dispatch(initializedSuccess())\r\n\r\n};\r\n","import './App.css';\r\nimport Navbar from \"./Components/Navbar/Navbar\";\r\nimport React from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\n// import DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./Components/Users/UsersContainer\";\r\n// import ProfileContainer from \"./Components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\r\nimport Login from \"./Components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nimport {initializeApp} from \"./Components/Redux/app-reducer\";\r\nimport {Preloader} from \"./Components/Common/Preloader/Preloader\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./Components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./Components/Profile/ProfileContainer'));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n\r\n        // @ts-ignore\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n\r\n                    <Route path='/Dialogs' render={() => {\r\n                       return <React.Suspense  fallback={<Preloader />}>\r\n                           <DialogsContainer/>\r\n                       </React.Suspense>\r\n                    }}/>\r\n                    <Route path='/profile/:userId?' render={() => {\r\n                        return <React.Suspense  fallback={<Preloader />}>\r\n                            <ProfileContainer/>\r\n                            </React.Suspense>\r\n                        }}/>\r\n                    <Route path='/Users' render={() => <UsersContainer/>}/>\r\n                    <Route path='/Login' render={() => <Login/>}/>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))\r\n(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","\r\nconst initialState = { sideBar: [\r\n        {id: 1, name: \"Andrei\"},\r\n        {id: 2, name: \"Bob\"},\r\n        {id: 3, name: \"Ceva\"}\r\n    ]}\r\nexport const sideBarReducer=(state = initialState, action: any)=>{\r\n    return state;\r\n}","import {profileReducer} from \"./profile-reducer\";\r\nimport {dialogsReducer} from \"./dialogs-reducer\";\r\nimport {sideBarReducer} from \"./sideBar-reducer\";\r\nimport {applyMiddleware, combineReducers, createStore, Store} from \"redux\";\r\nimport {usersReducer} from \"./users-reducer\";\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sideBar: sideBarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form : formReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport const store: Store = createStore(reducers, applyMiddleware(thunkMiddleWare));","import React from 'react';\r\nimport './index.css';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {store} from \"./Components/Redux/redux-store\";\r\nimport {Provider} from 'react-redux';\r\n\r\n       ReactDOM.render(\r\n        <BrowserRouter>\r\n         <Provider store={store}>\r\n            <App/>\r\n         </Provider>\r\n        </BrowserRouter>,\r\n        document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/preloader.e6ac52e1.gif\";","import React from \"react\";\r\nimport preloader from '../../Images/preloader.gif'\r\n\r\nexport const Preloader =()=> {\r\n    return (\r\n   <div>\r\n       <img src={preloader}/>\r\n   </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1Phu2\",\"error\":\"FormsControls_error__qbEDi\",\"formCommonError\":\"FormsControls_formCommonError__1f-cB\"};","import React from \"react\";\r\nimport style from './FormsControls.module.css'\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}: any) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={style.formControl + \" \" + (hasError ? style.error : \" \")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\nexport const TextArea = (props: any) => {\r\n    const {input, meta, child, ...RestProps} = props;\r\nreturn <FormControl {...props} ><textarea  {...input}  {...RestProps}/></FormControl>\r\n }\r\n\r\nexport const Input = (props: any) => {\r\n    const {input, meta, child, ...RestProps} = props;\r\n    return <FormControl {...props}> <input  {...input}  {...RestProps}/></FormControl>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__GCT00\",\"pageNumber\":\"Paginator_pageNumber__3JgkB\",\"selectedPage\":\"Paginator_selectedPage__3Tp-h\"};","import React from \"react\";\r\n\r\nexport const required =(value: any)=>{\r\n  if(value) return undefined\r\n    else return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator= (maxLength: any)=>(value: any)=>{\r\n  if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n  else return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__124Ez\",\"loginBlock\":\"Header_loginBlock__39Qm0\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USERS_PROFILE = 'SET_USERS_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE-POST';\r\n\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi, how are u\", likesCount: 5},\r\n        {id: 2, message: \"Fine \", likesCount: 3}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5, message: action.newPostText, likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n\r\n            };\r\n        }\r\n        case\r\n        SET_USERS_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case\r\n        SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        case\r\n        DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText: string) => ({type: ADD_POST, newPostText});\r\nexport const setUsersProfile = (profile: any) => ({type: SET_USERS_PROFILE, profile});\r\nexport const setStatus = (status: string | number) => ({type: SET_STATUS, status});\r\nexport const deletePostActionCreator = (postId: number) => ({type: DELETE_POST, postId})\r\n\r\nexport const getUsersProfile = (UserID: number) => async (dispatch: any) => {\r\n    let response = await usersAPI.getProfile(UserID)\r\n    dispatch(setUsersProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (UserID: number) => async (dispatch: any) => {\r\n    let response = await profileAPI.getStatus(UserID)\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status: string | number) => async (dispatch: any) => {\r\n       let response =await profileAPI.updateStatus(status)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n};"],"sourceRoot":""}